package com.william.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import com.william.model.OrderExample.Criteria;
import com.william.model.OrderExample.Criterion;
import com.william.model.OrderExample;
import com.william.model.OrderWithBLOBs;
import java.util.List;
import java.util.Map;

public class OrderSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Fri Mar 17 15:26:19 CST 2017
     */
    public String countByExample(OrderExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("orders");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Fri Mar 17 15:26:19 CST 2017
     */
    public String deleteByExample(OrderExample example) {
        BEGIN();
        DELETE_FROM("orders");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Fri Mar 17 15:26:19 CST 2017
     */
    public String insertSelective(OrderWithBLOBs record) {
        BEGIN();
        INSERT_INTO("orders");
        
        if (record.getId() != null) {
            VALUES("id", "#{id,jdbcType=INTEGER}");
        }
        
        if (record.getMode() != null) {
            VALUES("mode", "#{mode,jdbcType=SMALLINT}");
        }
        
        if (record.getStoreName() != null) {
            VALUES("store_name", "#{storeName,jdbcType=VARCHAR}");
        }
        
        if (record.getUserName() != null) {
            VALUES("user_name", "#{userName,jdbcType=VARCHAR}");
        }
        
        if (record.getTotal() != null) {
            VALUES("total", "#{total,jdbcType=DECIMAL}");
        }
        
        if (record.getDiscount() != null) {
            VALUES("discount", "#{discount,jdbcType=DECIMAL}");
        }
        
        if (record.getActualPayForegift() != null) {
            VALUES("actual_pay_foregift", "#{actualPayForegift,jdbcType=DECIMAL}");
        }
        
        if (record.getForegift() != null) {
            VALUES("foregift", "#{foregift,jdbcType=DECIMAL}");
        }
        
        if (record.getCouponId() != null) {
            VALUES("coupon_id", "#{couponId,jdbcType=INTEGER}");
        }
        
        if (record.getPayAmount() != null) {
            VALUES("pay_amount", "#{payAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getPhone() != null) {
            VALUES("phone", "#{phone,jdbcType=VARCHAR}");
        }
        
        if (record.getUserId() != null) {
            VALUES("user_id", "#{userId,jdbcType=INTEGER}");
        }
        
        if (record.getStoreId() != null) {
            VALUES("store_id", "#{storeId,jdbcType=INTEGER}");
        }
        
        if (record.getOrderStatusId() != null) {
            VALUES("order_status_id", "#{orderStatusId,jdbcType=INTEGER}");
        }
        
        if (record.getPaymentId() != null) {
            VALUES("payment_id", "#{paymentId,jdbcType=INTEGER}");
        }
        
        if (record.getPaymentName() != null) {
            VALUES("payment_name", "#{paymentName,jdbcType=VARCHAR}");
        }
        
        if (record.getActualPayAmount() != null) {
            VALUES("actual_pay_amount", "#{actualPayAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getShippingId() != null) {
            VALUES("shipping_id", "#{shippingId,jdbcType=INTEGER}");
        }
        
        if (record.getShippingName() != null) {
            VALUES("shipping_name", "#{shippingName,jdbcType=VARCHAR}");
        }
        
        if (record.getSchoolId() != null) {
            VALUES("school_id", "#{schoolId,jdbcType=INTEGER}");
        }
        
        if (record.getSchoolName() != null) {
            VALUES("school_name", "#{schoolName,jdbcType=VARCHAR}");
        }
        
        if (record.getProvince() != null) {
            VALUES("province", "#{province,jdbcType=INTEGER}");
        }
        
        if (record.getProvinceName() != null) {
            VALUES("province_name", "#{provinceName,jdbcType=VARCHAR}");
        }
        
        if (record.getCity() != null) {
            VALUES("city", "#{city,jdbcType=INTEGER}");
        }
        
        if (record.getCityName() != null) {
            VALUES("city_name", "#{cityName,jdbcType=VARCHAR}");
        }
        
        if (record.getDistrict() != null) {
            VALUES("district", "#{district,jdbcType=INTEGER}");
        }
        
        if (record.getDistrictName() != null) {
            VALUES("district_name", "#{districtName,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            VALUES("address", "#{address,jdbcType=VARCHAR}");
        }
        
        if (record.getPostcode() != null) {
            VALUES("postcode", "#{postcode,jdbcType=CHAR}");
        }
        
        if (record.getIp() != null) {
            VALUES("ip", "#{ip,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedAt() != null) {
            VALUES("created_at", "#{createdAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedAt() != null) {
            VALUES("updated_at", "#{updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDeletedAt() != null) {
            VALUES("deleted_at", "#{deletedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIspaid() != null) {
            VALUES("ispaid", "#{ispaid,jdbcType=TINYINT}");
        }
        
        if (record.getShippingAmount() != null) {
            VALUES("shipping_amount", "#{shippingAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getExpressNumber() != null) {
            VALUES("express_number", "#{expressNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getReservationPayTime() != null) {
            VALUES("reservation_pay_time", "#{reservationPayTime,jdbcType=DATE}");
        }
        
        if (record.getCustomField() != null) {
            VALUES("custom_field", "#{customField,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getRemark() != null) {
            VALUES("remark", "#{remark,jdbcType=LONGVARCHAR}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Fri Mar 17 15:26:19 CST 2017
     */
    public String selectByExampleWithBLOBs(OrderExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("id");
        } else {
            SELECT("id");
        }
        SELECT("mode");
        SELECT("store_name");
        SELECT("user_name");
        SELECT("total");
        SELECT("discount");
        SELECT("actual_pay_foregift");
        SELECT("foregift");
        SELECT("coupon_id");
        SELECT("pay_amount");
        SELECT("phone");
        SELECT("user_id");
        SELECT("store_id");
        SELECT("order_status_id");
        SELECT("payment_id");
        SELECT("payment_name");
        SELECT("actual_pay_amount");
        SELECT("shipping_id");
        SELECT("shipping_name");
        SELECT("school_id");
        SELECT("school_name");
        SELECT("province");
        SELECT("province_name");
        SELECT("city");
        SELECT("city_name");
        SELECT("district");
        SELECT("district_name");
        SELECT("address");
        SELECT("postcode");
        SELECT("ip");
        SELECT("created_at");
        SELECT("updated_at");
        SELECT("deleted_at");
        SELECT("ispaid");
        SELECT("shipping_amount");
        SELECT("express_number");
        SELECT("reservation_pay_time");
        SELECT("custom_field");
        SELECT("remark");
        FROM("orders");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Fri Mar 17 15:26:19 CST 2017
     */
    public String selectByExample(OrderExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("id");
        } else {
            SELECT("id");
        }
        SELECT("mode");
        SELECT("store_name");
        SELECT("user_name");
        SELECT("total");
        SELECT("discount");
        SELECT("actual_pay_foregift");
        SELECT("foregift");
        SELECT("coupon_id");
        SELECT("pay_amount");
        SELECT("phone");
        SELECT("user_id");
        SELECT("store_id");
        SELECT("order_status_id");
        SELECT("payment_id");
        SELECT("payment_name");
        SELECT("actual_pay_amount");
        SELECT("shipping_id");
        SELECT("shipping_name");
        SELECT("school_id");
        SELECT("school_name");
        SELECT("province");
        SELECT("province_name");
        SELECT("city");
        SELECT("city_name");
        SELECT("district");
        SELECT("district_name");
        SELECT("address");
        SELECT("postcode");
        SELECT("ip");
        SELECT("created_at");
        SELECT("updated_at");
        SELECT("deleted_at");
        SELECT("ispaid");
        SELECT("shipping_amount");
        SELECT("express_number");
        SELECT("reservation_pay_time");
        FROM("orders");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Fri Mar 17 15:26:19 CST 2017
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        OrderWithBLOBs record = (OrderWithBLOBs) parameter.get("record");
        OrderExample example = (OrderExample) parameter.get("example");
        
        BEGIN();
        UPDATE("orders");
        
        if (record.getId() != null) {
            SET("id = #{record.id,jdbcType=INTEGER}");
        }
        
        if (record.getMode() != null) {
            SET("mode = #{record.mode,jdbcType=SMALLINT}");
        }
        
        if (record.getStoreName() != null) {
            SET("store_name = #{record.storeName,jdbcType=VARCHAR}");
        }
        
        if (record.getUserName() != null) {
            SET("user_name = #{record.userName,jdbcType=VARCHAR}");
        }
        
        if (record.getTotal() != null) {
            SET("total = #{record.total,jdbcType=DECIMAL}");
        }
        
        if (record.getDiscount() != null) {
            SET("discount = #{record.discount,jdbcType=DECIMAL}");
        }
        
        if (record.getActualPayForegift() != null) {
            SET("actual_pay_foregift = #{record.actualPayForegift,jdbcType=DECIMAL}");
        }
        
        if (record.getForegift() != null) {
            SET("foregift = #{record.foregift,jdbcType=DECIMAL}");
        }
        
        if (record.getCouponId() != null) {
            SET("coupon_id = #{record.couponId,jdbcType=INTEGER}");
        }
        
        if (record.getPayAmount() != null) {
            SET("pay_amount = #{record.payAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getPhone() != null) {
            SET("phone = #{record.phone,jdbcType=VARCHAR}");
        }
        
        if (record.getUserId() != null) {
            SET("user_id = #{record.userId,jdbcType=INTEGER}");
        }
        
        if (record.getStoreId() != null) {
            SET("store_id = #{record.storeId,jdbcType=INTEGER}");
        }
        
        if (record.getOrderStatusId() != null) {
            SET("order_status_id = #{record.orderStatusId,jdbcType=INTEGER}");
        }
        
        if (record.getPaymentId() != null) {
            SET("payment_id = #{record.paymentId,jdbcType=INTEGER}");
        }
        
        if (record.getPaymentName() != null) {
            SET("payment_name = #{record.paymentName,jdbcType=VARCHAR}");
        }
        
        if (record.getActualPayAmount() != null) {
            SET("actual_pay_amount = #{record.actualPayAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getShippingId() != null) {
            SET("shipping_id = #{record.shippingId,jdbcType=INTEGER}");
        }
        
        if (record.getShippingName() != null) {
            SET("shipping_name = #{record.shippingName,jdbcType=VARCHAR}");
        }
        
        if (record.getSchoolId() != null) {
            SET("school_id = #{record.schoolId,jdbcType=INTEGER}");
        }
        
        if (record.getSchoolName() != null) {
            SET("school_name = #{record.schoolName,jdbcType=VARCHAR}");
        }
        
        if (record.getProvince() != null) {
            SET("province = #{record.province,jdbcType=INTEGER}");
        }
        
        if (record.getProvinceName() != null) {
            SET("province_name = #{record.provinceName,jdbcType=VARCHAR}");
        }
        
        if (record.getCity() != null) {
            SET("city = #{record.city,jdbcType=INTEGER}");
        }
        
        if (record.getCityName() != null) {
            SET("city_name = #{record.cityName,jdbcType=VARCHAR}");
        }
        
        if (record.getDistrict() != null) {
            SET("district = #{record.district,jdbcType=INTEGER}");
        }
        
        if (record.getDistrictName() != null) {
            SET("district_name = #{record.districtName,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            SET("address = #{record.address,jdbcType=VARCHAR}");
        }
        
        if (record.getPostcode() != null) {
            SET("postcode = #{record.postcode,jdbcType=CHAR}");
        }
        
        if (record.getIp() != null) {
            SET("ip = #{record.ip,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedAt() != null) {
            SET("created_at = #{record.createdAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedAt() != null) {
            SET("updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDeletedAt() != null) {
            SET("deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIspaid() != null) {
            SET("ispaid = #{record.ispaid,jdbcType=TINYINT}");
        }
        
        if (record.getShippingAmount() != null) {
            SET("shipping_amount = #{record.shippingAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getExpressNumber() != null) {
            SET("express_number = #{record.expressNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getReservationPayTime() != null) {
            SET("reservation_pay_time = #{record.reservationPayTime,jdbcType=DATE}");
        }
        
        if (record.getCustomField() != null) {
            SET("custom_field = #{record.customField,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getRemark() != null) {
            SET("remark = #{record.remark,jdbcType=LONGVARCHAR}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Fri Mar 17 15:26:19 CST 2017
     */
    public String updateByExampleWithBLOBs(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("orders");
        
        SET("id = #{record.id,jdbcType=INTEGER}");
        SET("mode = #{record.mode,jdbcType=SMALLINT}");
        SET("store_name = #{record.storeName,jdbcType=VARCHAR}");
        SET("user_name = #{record.userName,jdbcType=VARCHAR}");
        SET("total = #{record.total,jdbcType=DECIMAL}");
        SET("discount = #{record.discount,jdbcType=DECIMAL}");
        SET("actual_pay_foregift = #{record.actualPayForegift,jdbcType=DECIMAL}");
        SET("foregift = #{record.foregift,jdbcType=DECIMAL}");
        SET("coupon_id = #{record.couponId,jdbcType=INTEGER}");
        SET("pay_amount = #{record.payAmount,jdbcType=DECIMAL}");
        SET("phone = #{record.phone,jdbcType=VARCHAR}");
        SET("user_id = #{record.userId,jdbcType=INTEGER}");
        SET("store_id = #{record.storeId,jdbcType=INTEGER}");
        SET("order_status_id = #{record.orderStatusId,jdbcType=INTEGER}");
        SET("payment_id = #{record.paymentId,jdbcType=INTEGER}");
        SET("payment_name = #{record.paymentName,jdbcType=VARCHAR}");
        SET("actual_pay_amount = #{record.actualPayAmount,jdbcType=DECIMAL}");
        SET("shipping_id = #{record.shippingId,jdbcType=INTEGER}");
        SET("shipping_name = #{record.shippingName,jdbcType=VARCHAR}");
        SET("school_id = #{record.schoolId,jdbcType=INTEGER}");
        SET("school_name = #{record.schoolName,jdbcType=VARCHAR}");
        SET("province = #{record.province,jdbcType=INTEGER}");
        SET("province_name = #{record.provinceName,jdbcType=VARCHAR}");
        SET("city = #{record.city,jdbcType=INTEGER}");
        SET("city_name = #{record.cityName,jdbcType=VARCHAR}");
        SET("district = #{record.district,jdbcType=INTEGER}");
        SET("district_name = #{record.districtName,jdbcType=VARCHAR}");
        SET("address = #{record.address,jdbcType=VARCHAR}");
        SET("postcode = #{record.postcode,jdbcType=CHAR}");
        SET("ip = #{record.ip,jdbcType=VARCHAR}");
        SET("created_at = #{record.createdAt,jdbcType=TIMESTAMP}");
        SET("updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}");
        SET("deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}");
        SET("ispaid = #{record.ispaid,jdbcType=TINYINT}");
        SET("shipping_amount = #{record.shippingAmount,jdbcType=DECIMAL}");
        SET("express_number = #{record.expressNumber,jdbcType=VARCHAR}");
        SET("reservation_pay_time = #{record.reservationPayTime,jdbcType=DATE}");
        SET("custom_field = #{record.customField,jdbcType=LONGVARCHAR}");
        SET("remark = #{record.remark,jdbcType=LONGVARCHAR}");
        
        OrderExample example = (OrderExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Fri Mar 17 15:26:19 CST 2017
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("orders");
        
        SET("id = #{record.id,jdbcType=INTEGER}");
        SET("mode = #{record.mode,jdbcType=SMALLINT}");
        SET("store_name = #{record.storeName,jdbcType=VARCHAR}");
        SET("user_name = #{record.userName,jdbcType=VARCHAR}");
        SET("total = #{record.total,jdbcType=DECIMAL}");
        SET("discount = #{record.discount,jdbcType=DECIMAL}");
        SET("actual_pay_foregift = #{record.actualPayForegift,jdbcType=DECIMAL}");
        SET("foregift = #{record.foregift,jdbcType=DECIMAL}");
        SET("coupon_id = #{record.couponId,jdbcType=INTEGER}");
        SET("pay_amount = #{record.payAmount,jdbcType=DECIMAL}");
        SET("phone = #{record.phone,jdbcType=VARCHAR}");
        SET("user_id = #{record.userId,jdbcType=INTEGER}");
        SET("store_id = #{record.storeId,jdbcType=INTEGER}");
        SET("order_status_id = #{record.orderStatusId,jdbcType=INTEGER}");
        SET("payment_id = #{record.paymentId,jdbcType=INTEGER}");
        SET("payment_name = #{record.paymentName,jdbcType=VARCHAR}");
        SET("actual_pay_amount = #{record.actualPayAmount,jdbcType=DECIMAL}");
        SET("shipping_id = #{record.shippingId,jdbcType=INTEGER}");
        SET("shipping_name = #{record.shippingName,jdbcType=VARCHAR}");
        SET("school_id = #{record.schoolId,jdbcType=INTEGER}");
        SET("school_name = #{record.schoolName,jdbcType=VARCHAR}");
        SET("province = #{record.province,jdbcType=INTEGER}");
        SET("province_name = #{record.provinceName,jdbcType=VARCHAR}");
        SET("city = #{record.city,jdbcType=INTEGER}");
        SET("city_name = #{record.cityName,jdbcType=VARCHAR}");
        SET("district = #{record.district,jdbcType=INTEGER}");
        SET("district_name = #{record.districtName,jdbcType=VARCHAR}");
        SET("address = #{record.address,jdbcType=VARCHAR}");
        SET("postcode = #{record.postcode,jdbcType=CHAR}");
        SET("ip = #{record.ip,jdbcType=VARCHAR}");
        SET("created_at = #{record.createdAt,jdbcType=TIMESTAMP}");
        SET("updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}");
        SET("deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}");
        SET("ispaid = #{record.ispaid,jdbcType=TINYINT}");
        SET("shipping_amount = #{record.shippingAmount,jdbcType=DECIMAL}");
        SET("express_number = #{record.expressNumber,jdbcType=VARCHAR}");
        SET("reservation_pay_time = #{record.reservationPayTime,jdbcType=DATE}");
        
        OrderExample example = (OrderExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Fri Mar 17 15:26:19 CST 2017
     */
    public String updateByPrimaryKeySelective(OrderWithBLOBs record) {
        BEGIN();
        UPDATE("orders");
        
        if (record.getMode() != null) {
            SET("mode = #{mode,jdbcType=SMALLINT}");
        }
        
        if (record.getStoreName() != null) {
            SET("store_name = #{storeName,jdbcType=VARCHAR}");
        }
        
        if (record.getUserName() != null) {
            SET("user_name = #{userName,jdbcType=VARCHAR}");
        }
        
        if (record.getTotal() != null) {
            SET("total = #{total,jdbcType=DECIMAL}");
        }
        
        if (record.getDiscount() != null) {
            SET("discount = #{discount,jdbcType=DECIMAL}");
        }
        
        if (record.getActualPayForegift() != null) {
            SET("actual_pay_foregift = #{actualPayForegift,jdbcType=DECIMAL}");
        }
        
        if (record.getForegift() != null) {
            SET("foregift = #{foregift,jdbcType=DECIMAL}");
        }
        
        if (record.getCouponId() != null) {
            SET("coupon_id = #{couponId,jdbcType=INTEGER}");
        }
        
        if (record.getPayAmount() != null) {
            SET("pay_amount = #{payAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getPhone() != null) {
            SET("phone = #{phone,jdbcType=VARCHAR}");
        }
        
        if (record.getUserId() != null) {
            SET("user_id = #{userId,jdbcType=INTEGER}");
        }
        
        if (record.getStoreId() != null) {
            SET("store_id = #{storeId,jdbcType=INTEGER}");
        }
        
        if (record.getOrderStatusId() != null) {
            SET("order_status_id = #{orderStatusId,jdbcType=INTEGER}");
        }
        
        if (record.getPaymentId() != null) {
            SET("payment_id = #{paymentId,jdbcType=INTEGER}");
        }
        
        if (record.getPaymentName() != null) {
            SET("payment_name = #{paymentName,jdbcType=VARCHAR}");
        }
        
        if (record.getActualPayAmount() != null) {
            SET("actual_pay_amount = #{actualPayAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getShippingId() != null) {
            SET("shipping_id = #{shippingId,jdbcType=INTEGER}");
        }
        
        if (record.getShippingName() != null) {
            SET("shipping_name = #{shippingName,jdbcType=VARCHAR}");
        }
        
        if (record.getSchoolId() != null) {
            SET("school_id = #{schoolId,jdbcType=INTEGER}");
        }
        
        if (record.getSchoolName() != null) {
            SET("school_name = #{schoolName,jdbcType=VARCHAR}");
        }
        
        if (record.getProvince() != null) {
            SET("province = #{province,jdbcType=INTEGER}");
        }
        
        if (record.getProvinceName() != null) {
            SET("province_name = #{provinceName,jdbcType=VARCHAR}");
        }
        
        if (record.getCity() != null) {
            SET("city = #{city,jdbcType=INTEGER}");
        }
        
        if (record.getCityName() != null) {
            SET("city_name = #{cityName,jdbcType=VARCHAR}");
        }
        
        if (record.getDistrict() != null) {
            SET("district = #{district,jdbcType=INTEGER}");
        }
        
        if (record.getDistrictName() != null) {
            SET("district_name = #{districtName,jdbcType=VARCHAR}");
        }
        
        if (record.getAddress() != null) {
            SET("address = #{address,jdbcType=VARCHAR}");
        }
        
        if (record.getPostcode() != null) {
            SET("postcode = #{postcode,jdbcType=CHAR}");
        }
        
        if (record.getIp() != null) {
            SET("ip = #{ip,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedAt() != null) {
            SET("created_at = #{createdAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedAt() != null) {
            SET("updated_at = #{updatedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDeletedAt() != null) {
            SET("deleted_at = #{deletedAt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIspaid() != null) {
            SET("ispaid = #{ispaid,jdbcType=TINYINT}");
        }
        
        if (record.getShippingAmount() != null) {
            SET("shipping_amount = #{shippingAmount,jdbcType=DECIMAL}");
        }
        
        if (record.getExpressNumber() != null) {
            SET("express_number = #{expressNumber,jdbcType=VARCHAR}");
        }
        
        if (record.getReservationPayTime() != null) {
            SET("reservation_pay_time = #{reservationPayTime,jdbcType=DATE}");
        }
        
        if (record.getCustomField() != null) {
            SET("custom_field = #{customField,jdbcType=LONGVARCHAR}");
        }
        
        if (record.getRemark() != null) {
            SET("remark = #{remark,jdbcType=LONGVARCHAR}");
        }
        
        WHERE("id = #{id,jdbcType=INTEGER}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbggenerated Fri Mar 17 15:26:19 CST 2017
     */
    protected void applyWhere(OrderExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}