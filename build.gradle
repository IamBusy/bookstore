group 'com.william'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'



repositories {
    mavenCentral()

    maven {
        url("https://plugins.gradle.org/m2/")
    }
}

configurations {

    mybatisGenerator
}

ext{
    def prop = new Properties()

    file("src/main/resources/jdbc-mysql.properties")
            .withInputStream {
        prop.load(it)
    }
    file("src/main/resources/gradle.properties")
            .withInputStream {
        prop.load(it)
    }

    prop.each {
        project.extensions.add("$it.key",it.value);
    }
}

dependencies {
    def springVersion   = "4.3.6.RELEASE"
    def springSecVersion= "4.2.2.RELEASE"
    def mysqlVersion    = "5.1.38"
    def jacksonVersion  = "2.8.7"
    def jwtVersion      = "0.7.0"

    providedCompile "javax:javaee-api:6.0"


    //dependencies for spring
    compile("org.springframework:spring-aop:$springVersion",
            "org.springframework:spring-orm:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.springframework:spring-instrument-tomcat:$springVersion",
            "org.springframework:spring-instrument:$springVersion",
            "org.springframework:spring-framework-bom:$springVersion",
            "org.springframework:spring-expression:$springVersion",
            "org.springframework:spring-core:$springVersion",
            "org.springframework:spring-context-support:$springVersion",
            "org.springframework:spring-context:$springVersion",
            "org.springframework:spring-beans:$springVersion",
            "org.springframework:spring-aspects:$springVersion",
            "org.springframework:spring-test:$springVersion",
            "org.springframework:spring-tx:$springVersion",
            "org.springframework:spring-web:$springVersion",
            "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-webmvc-portlet:$springVersion")

    compile("org.springframework.security:spring-security-web:$springSecVersion",
            "org.springframework.security:spring-security-core:$springSecVersion",
            "org.springframework.security:spring-security-config:$springSecVersion")



    //dependencies for jackson
    compile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")


    //dependencies for mybatis
    compile("org.mybatis.generator:mybatis-generator-core:1.3.2",
            "org.mybatis:mybatis-spring:1.2.3",
            "org.mybatis:mybatis:3.3.0")

    compile("io.jsonwebtoken:jjwt:${jwtVersion}")


    //dependencies for database
    compile ("mysql:mysql-connector-java:$mysqlVersion")



    mybatisGenerator "org.mybatis.generator:mybatis-generator-core:1.3.2"
    mybatisGenerator "mysql:mysql-connector-java:$mysqlVersion"

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

// 利用ant创建一个自动生成MyBatis目录文件的task
task mybatisGenerate << {

    ant.properties['targetProject'] = projectDir.path
    //ant.properties['jarDirection'] = project['jdbc.jarDirection']
    ant.properties['driverClass'] = project['jdbc.driverClassName']
    ant.properties['connectionURL'] = project['jdbc.url']
    ant.properties['userId'] = project['jdbc.username']
    ant.properties['password'] = project['jdbc.password']
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = project['mybatis.modelPackage']
    ant.properties['mapperPackage'] = project['mybatis.mapperPackage']
    ant.properties['sqlMapperPackage'] = project['mybatis.sqlMapperPackage']

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )

    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis/generatorConfig.xml',
            verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'jarDirection')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}
